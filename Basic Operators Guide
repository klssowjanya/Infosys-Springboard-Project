1
Which arithmetic operator is used to calculate the remainder of a division?

    /
    //
    %
    **

Answer: 
%

*************************************************************************************************************************************************************************************************************************
2. What is the significance of // in Arithmetic Operators?

    It performs standard division.
    It calculates the square of a number.
    It calculates the remainder of a division.
    It performs floor division (integer division).

Answer:
It performs floor division (integer division).

*************************************************************************************************************************************************************************************************************************

3. Which logical operator returns True if at least one condition is True?

not
and
or

Answer:
or

*************************************************************************************************************************************************************************************************************************
4. Evaluate the expression

(5 > 3) or (2 < 1)

    False
    True

Answer: 
True

*************************************************************************************************************************************************************************************************************************
5. What will be the output of the following?

List1 = [1, 2, 3, 4]
List2 = [2, 3, 4, 5]
List3 = List1 + List2
print(List3)

    [1, 1, 3, 4, 2, 3, 4, 5]
    [1, 2, 3, 4, 2, 3, 4, 5]
    [1, 2, 2, 3, 3, 4, 4, 5]
    [1, 2, 3, 4, 5]

Answer:
[1, 2, 3, 4, 2, 3, 4, 5]

*************************************************************************************************************************************************************************************************************************
6. Evaluate the expression

a = 5
a %= 3
print(a)

2
Error!
3
1.67

Answer:
2

*************************************************************************************************************************************************************************************************************************

7. What is the primary purpose of the walrus operator (:=) in Python?

    To define a lambda function.
    To create a new list comprehension.
    To perform bitwise AND operation.
    To assign a value to a variable within an expression.

Answer:
To assign a value to a variable within an expression.

*************************************************************************************************************************************************************************************************************************

8. Calculate the mean of everyone's age at the party!
age_list = [10, 15, 12, 13, 14, 14]

# Using arithmetic operators calculate average age of people at alice's party!

avg_age = sum(age_list) / len(age_list)
print(avg_age)
13.0

*************************************************************************************************************************************************************************************************************************

9. Find the missing operators!
a = 5
b = 3
c = (a ** b) // a  # X and Y are variables, replace them with the correct arithmetic operators to get c = 25.
print(c)

X =  '**'# Which operator did you use inplace of X
Y = '//' # Which operator did you use inplace of Y
25

*************************************************************************************************************************************************************************************************************************

10. Complete the logic of the code.
def Fibonacci(n):
    if n < 0:
        print("Incorrect input")
        return None  

    # Handle base cases
    elif n == 0: 
        return 0
    elif n == 1 or n == 2:
        return 1

    # Recursive case
    result = 0
    result += Fibonacci(n - 1)  # Add Fibonacci(n-1) to result
    result += Fibonacci(n - 2)  # Add Fibonacci(n-2) to result
    return result

*************************************************************************************************************************************************************************************************************************

11. Calculate the Total Bill
total_bill = 240

*************************************************************************************************************************************************************************************************************************

12. Is It a Leap Year?
year = 2024
def leap_year(year):
    # Check if it is a leap year
    if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
        return True
    else:
        return False

*************************************************************************************************************************************************************************************************************************

13. Check both conditions!
X = 16 # donâ€™t change this value!

# write the expression here

result = X>10 and X%2==0

*************************************************************************************************************************************************************************************************************************

14. Which of the following expression would result in True?
(True or False) or not (False or False)
(True or False) and not (False or False)
(True or False) and (False or False)
not(True or False)

Answer:
(True or False) or not (False or False)
(True or False) and not (False or False)

*************************************************************************************************************************************************************************************************************************
15. Fix the logical error in the code so it calculates the remainder when 100 is divided by 7.
# correct the logic
result = 100 % 7 
print("The remainder is:", result)
The remainder is: 2

*************************************************************************************************************************************************************************************************************************

16. Decode the Logic!

Why does the following statement output Default on being executed?
print({} or "Default")

    Because the or operator always returns the second operand.
    Because Default is explicitly specified in the statement.
    Because {} is falsy, so Python evaluates and returns Default.
    Because {} is truthy, so Python skips Default.

Answer:
Because {} is falsy, so Python evaluates and returns Default.

*************************************************************************************************************************************************************************************************************************

17. Why does the following statement output hello on being executed?

print(5 and 'hello')

    Because the and operator always returns the second operand.
    Because 5 is falsy, so Python evaluates and returns hello.
    Because hello is explicitly specified in the statement.
    Because the and operator returns the last operand when both operands are truthy.

Answer:
Because the and operator returns the last operand when both operands are truthy.

*************************************************************************************************************************************************************************************************************************
